from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, CallbackQueryHandler
import asyncio
from tortoise import Tortoise, run_async
from models import User, Order


TOKEN = '7287431498:AAEVkzhrn3xjTOj-Q-WFo1qBzDoNlZMgmaM'
cake_creator_id =  845963398


start_key = [['/start']]
reply_markup = ReplyKeyboardMarkup(start_key, resize_keyboard=True, one_time_keyboard=True)


first_level_keyboard = [
    [
        InlineKeyboardButton('–ú–æ–∏ –∑–∞–∫–∞–∑—ã', callback_data='user_orders')
    ],
    [
        InlineKeyboardButton("–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å üéÇ", callback_data='choose_cake'),
        InlineKeyboardButton("–°–æ–±—Ä–∞—Ç—å üç∞", callback_data='build_cake'),
    ],
]
first_level_reply_markup = InlineKeyboardMarkup(first_level_keyboard)


choose_cake_keyboard = [
    [
        InlineKeyboardButton("–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç üç´üç∞", callback_data='chocolate_cake'),
        InlineKeyboardButton('–ú–µ–¥–æ–≤–∏–∫ üç∞üçØ',callback_data='honey_cake')
    ],
    [
        InlineKeyboardButton('–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç üçíüç∞', callback_data='red_cake'),
        InlineKeyboardButton('–ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π üçëüç∞',callback_data='apricot_cake'),
    ],
    [
        InlineKeyboardButton('–í–∞–Ω–∏–ª—å–Ω—ã–π —Ç–æ—Ä—Ç üéÇ',callback_data='vanilla_cake'),
        InlineKeyboardButton('–ú–∞–∫–æ–≤—ã–π —Ç–æ—Ä—Ç‚ö´Ô∏èüçãüç∞',callback_data='poppy_sand_cake')
    ],
    [
    
         InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main')
    
    ]
]


choose_cake_reply_markup = InlineKeyboardMarkup(choose_cake_keyboard)
build_cake_keyboard = [
    [
        InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫–æ—Ä–∂", callback_data='select_crust'),
        InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –Ω–∞—á–∏–Ω–∫—É", callback_data='select_filling'),
    ],
    [
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_main'),
    ],
    [
        InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –µ—â—ë", callback_data='back_to_main'),
    ],
    [
        InlineKeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å',callback_data='weight_cake')
    ]
]


build_cake_base = [
    [
        InlineKeyboardButton('–í–∞–Ω–∏–ª—å–Ω—ã–π',callback_data='vanilla_base')
    ],
    [
        InlineKeyboardButton('–®–æ–∫–æ–ª–∞–¥–Ω—ã–π',callback_data='chocolate_base')
    ],
    [
        InlineKeyboardButton('–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç',callback_data='red_velvet_base')
    ],
    [
        InlineKeyboardButton('–ú–µ–¥–æ–≤—ã–π',callback_data='honey_base')
    ],
    [
        InlineKeyboardButton('–ú–∞–∫–æ–≤—ã–π',callback_data='poppy_seed_base')
    ],
    [
        InlineKeyboardButton('–ù–∞–∑–∞–¥',callback_data='back_to_main')
    ],
]


cake_cream = [
    [
        InlineKeyboardButton('–°–º–µ—Ç–∞–Ω–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π',callback_data='sour_cream')
    ],
    [
        InlineKeyboardButton('–¢–≤–æ—Ä–æ–∂–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π(–∫—Ä–µ–º-—á–∏–∑)',callback_data='cream_cheese')
    ],
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à —Å –º–æ–ª–æ—á–Ω—ã–π–º —à–æ–∫–æ–ª–∞–¥–æ–º',callback_data='Milk_Chocolate_Ganache')
    ],
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à —Å –±–µ–ª—ã–º —à–æ–∫–æ–ª–∞–¥–æ–º',callback_data='white_Chocolate_Ganache')
    ],
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à —Å —Ç–µ–º–Ω—ã–º —à–æ–∫–æ–ª–∞–¥–æ–º',callback_data='black_Chocolate_Ganache')
    ],
    [
        InlineKeyboardButton('–¢–≤–æ—Ä–æ–∂–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π –∫—Ä–µ–º —Å–æ —Å–≥—É—â–µ–Ω—ã–º –º–æ–ª–æ–∫–æ–º',callback_data='sour_cream_2')
    ]
]


cake_filling = [
    [
        InlineKeyboardButton('–Ø–≥–æ–¥–Ω–∞—è',callback_data='berry_filling')
    ],
     [
        InlineKeyboardButton('–ú—É—Å—Å–æ–≤–∞—è',callback_data='mousse_filling')
    ],
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à',callback_data='ganache_filling')
    ],
    [
        InlineKeyboardButton('–ö–∞—Ä–∞–º–µ–ª—å',callback_data='caramel_filling')
    ]
]
ccaramel_filling = [
    [
        InlineKeyboardButton('–ö–∞—Ä–∞–º–µ–ª—å',callback_data='caramel_filling_ok')
    ],
    [
        InlineKeyboardButton('–ö–∞—Ä–∞–º–µ–ª—å-–∞—Ä–∞—Ö–∏—Å',callback_data='caramel_peanuts')
    ],
    [
        InlineKeyboardButton('–ö–∞—Ä–∞–º–µ–ª—å-–≥—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö',callback_data='caramel_walnut')
    ],
    [
        InlineKeyboardButton('–ö–∞—Ä–∞–º–µ–ª—å-–±–∞–Ω–∞–Ω',callback_data='caramel_banana')
    ]
]
berry_filling = [
    [
        InlineKeyboardButton('–ú–∞–ª–∏–Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä',callback_data='raspberry_jam')
    ],
    [
        InlineKeyboardButton('–ö–ª—É–±–Ω–∏—á–Ω—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä',callback_data='strawberry_jam')
    ],
    [
        InlineKeyboardButton('–í–∏—à–Ω–µ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä',callback_data='cherry_jam')
    ],
    [
        InlineKeyboardButton('–°–º–æ—Ä–æ–¥–∏–Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä',callback_data='currant_Jam')
    ],
    [
        InlineKeyboardButton('–Ø–≥–æ–¥–Ω—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä(–º–∏–∫—Å)',callback_data='mix_jam')
    ],
]

mousse_filling = [
    [
        InlineKeyboardButton('–®–æ–∫–æ–ª–∞–¥–Ω—ã–π –º—É—Å—Å',callback_data='chocolate_mousse')
    ],
    [
        InlineKeyboardButton('–ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π –º—É—Å—Å',callback_data='caramel_mousse')
    ],
    [
        InlineKeyboardButton('–Ø–≥–æ–¥–Ω—ã–π –º—É—Å—Å',callback_data='berry_mousse')
    ]
]


final_coating = [
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à –Ω–∞ –±–µ–ª–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='final_coating_white_ganache')
    ],
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à –Ω–∞ –º–æ–ª–æ—á–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='final_coating_milk_ganache')
    ],
    [
        InlineKeyboardButton('–ö—Ä–µ–º-—á–∏–∑',callback_data='final_cream_cheese')
    ],
]

chocolate_mousse = [
    [
        InlineKeyboardButton('–ú—É—Å—Å –Ω–∞ –º–æ–ª–æ—á–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='milk_chocolate_mousse')
    ],
    [
        InlineKeyboardButton('–ú—É—Å—Å –Ω–∞ –±–µ–ª–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='white_chocolate_mousse')
    ],
    [
        InlineKeyboardButton('–ú—É—Å—Å –Ω–∞ —Ç—ë–º–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='black_chocolate_mousse')
    ],
]

berry_mousse = [
    [
        InlineKeyboardButton('–ú–∞–ª–∏–Ω–∞',callback_data='raspberry_mousse')
    ],
    [
        InlineKeyboardButton('–ö–ª—É–±–Ω–∏–∫–∞',callback_data='strawberry_mousse')
    ],
    [
        InlineKeyboardButton('–í–∏—à–Ω—è',callback_data='cerry_mousse')
    ],
    [
        InlineKeyboardButton('C–º–æ—Ä–æ–¥–∏–Ω–∞',callback_data='currant_mousse')
    ],
    [
        InlineKeyboardButton('C–º–µ—Å—å —è–≥–æ–¥ (–º–∏–∫—Å)',callback_data='mix_mousse')
    ],
]

ganache_filling = [
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à –Ω–∞ –±–µ–ª–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='ganache_filling_white')
    ],
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à –Ω–∞ –º–æ–ª–æ—á–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='ganache_filling_milk')
    ],
    [
        InlineKeyboardButton('–ì–∞–Ω–∞—à –Ω–∞ —Ç—ë–º–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ',callback_data='ganache_filling_black')
    ],
]
cake_build_final = [
    [
        InlineKeyboardButton('–î–∞/–ó–∞–∫–∞–∑–∞—Ç—å',callback_data='YES')
    ],
    [
        InlineKeyboardButton('–ù–µ—Ç/–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',callback_data='back_to_main')
    ]
]
cake_final = [
    [
        InlineKeyboardButton('–î–∞/–ó–∞–∫–∞–∑–∞—Ç—å',callback_data='yeap')
    ],
    [
        InlineKeyboardButton('–ù–µ—Ç/–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',callback_data='back_to_main')
    ]
]
cake_final_markup = InlineKeyboardMarkup(cake_final)
build_cake_reply_markup = InlineKeyboardMarkup(build_cake_keyboard)
mousse_filling_markup = InlineKeyboardMarkup(mousse_filling)
berry_filling_markup = InlineKeyboardMarkup(berry_filling)
cake_filling_markup = InlineKeyboardMarkup(cake_filling)
ganache_filling_markup = InlineKeyboardMarkup(ganache_filling)
caramel_filling_markup = InlineKeyboardMarkup(ccaramel_filling)
berry_mousse_markup = InlineKeyboardMarkup(berry_mousse)
chocolate_mousse_markup = InlineKeyboardMarkup(chocolate_mousse)
cake_cream_markup = InlineKeyboardMarkup(cake_cream)
build_cake_base_markup=InlineKeyboardMarkup(build_cake_base)
final_coating_markup = InlineKeyboardMarkup(final_coating)
cake_build_final_markup = InlineKeyboardMarkup(cake_build_final)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    chat_id = update.effective_chat.id
    try:
        user = await User.get(chat_id=chat_id)
        await update.message.reply_text(text=f'–ü—Ä–∏–≤–µ—Å—Ç–≤—É–µ–º –≤–∞—Å, {user.name}!\n–•–æ–¥–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ—Ä—Ç –∏–ª–∏ —Å–æ–±—Ä–∞—Ç—å?',reply_markup=first_level_reply_markup)
    except:
        await update.message.reply_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:')
        context.user_data['waiting_for_name']=True
        



async def button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    chat_id = update.effective_chat.id
    user = await User.get(chat_id=chat_id)
    query = update.callback_query
    await query.answer()

    if query.data == 'choose_cake':
        context.user_data['cake_name'] = {
            '—Ç–æ—Ä—Ç': None,
            '–≤–µ—Å': 0.0
        }
        await query.edit_message_text(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä—Ç:', reply_markup=choose_cake_reply_markup)
   
    elif query.data == "user_orders":
        user_orders = await Order.filter(user=user)
        
        await query.edit_message_text(text=f'{[str(order) for order in user_orders]}',reply_markup=InlineKeyboardMarkup([cake_final[-1]]))

    elif query.data == 'build_cake':
        context.user_data['cake_build'] = {
        '–∫–æ—Ä–∂': None,
        '–Ω–∞—á–∏–Ω–∫–∞': None,
        '–∫—Ä–µ–º': None,
        '–ø–æ–∫—Ä—ã—Ç–∏–µ': None,
        '–≤–µ—Å': 0.0
        }
        await query.edit_message_text(text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä–∂:', reply_markup=build_cake_base_markup)
    
    elif query.data == 'vanilla_base':
        context.user_data['cake_build']['–∫–æ—Ä–∂'] = "–í–∞–Ω–∏–ª—å–Ω—ã–π"
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–º:",reply_markup=cake_cream_markup)  
    elif query.data == 'red_velvet_base':
        context.user_data['cake_build']['–∫–æ—Ä–∂'] = "–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç"
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–º:",reply_markup=cake_cream_markup)       
    elif query.data == 'honey_base':
        context.user_data['cake_build']['–∫–æ—Ä–∂'] = "–ú–µ–¥–æ–≤—ã–π"
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–º:",reply_markup=cake_cream_markup)         
    elif query.data == 'poppy_seed_base':
        context.user_data['cake_build']['–∫–æ—Ä–∂'] = "–ú–∞–∫–æ–≤—ã–π"
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–º:",reply_markup=cake_cream_markup) 
    elif query.data == 'chocolate_base':
        context.user_data['cake_build']['–∫–æ—Ä–∂'] = "–®–æ–∫–æ–ª–∞–¥–Ω—ã–π"
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–µ–º:",reply_markup=cake_cream_markup) 

    elif query.data == 'sour_cream':
        context.user_data['cake_build']['–∫—Ä–µ–º'] = '–°–º–µ—Ç–∞–Ω–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=cake_filling_markup)           
    elif query.data == 'cream_cheese':
        context.user_data['cake_build']['–∫—Ä–µ–º'] = '–¢–≤–æ—Ä–æ–∂–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π(–∫—Ä–µ–º-—á–∏–∑'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=cake_filling_markup)            
    elif query.data == 'Milk_Chocolate_Ganache':
        context.user_data['cake_build']['–∫—Ä–µ–º'] = '–ì–∞–Ω–∞—à —Å –º–æ–ª–æ—á–Ω—ã–π–º —à–æ–∫–æ–ª–∞–¥–æ–º'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=cake_filling_markup)             
    elif query.data == 'white_Chocolate_Ganache':
        context.user_data['cake_build']['–∫—Ä–µ–º'] = '–ì–∞–Ω–∞—à —Å –±–µ–ª—ã–º —à–æ–∫–æ–ª–∞–¥–æ–º'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=cake_filling_markup)     
    elif query.data == 'black_Chocolate_Ganache':
        context.user_data['cake_build']['–∫—Ä–µ–º'] = '–ì–∞–Ω–∞—à —Å —Ç–µ–º–Ω—ã–º —à–æ–∫–æ–ª–∞–¥–æ–º'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=cake_filling_markup)          
    elif query.data == 'sour_cream_2':
        context.user_data['cake_build']['–∫—Ä–µ–º'] = '–¢–≤–æ—Ä–æ–∂–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π –∫—Ä–µ–º —Å–æ —Å–≥—É—â–µ–Ω—ã–º –º–æ–ª–æ–∫–æ–º'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=cake_filling_markup)
    
    elif query.data == 'mousse_filling':
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=mousse_filling_markup)
    elif query.data == 'berry_filling':
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=berry_filling_markup)
    elif query.data == 'chocolate_mousse':
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:", reply_markup=chocolate_mousse_markup)
    elif query.data == 'ganache_filling':
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=ganache_filling_markup)
    elif query.data == 'caramel_filling':
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∏–Ω–∫—É:",reply_markup=caramel_filling_markup)

    elif query.data == 'caramel_filling_ok':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ö–∞—Ä–∞–º–µ–ª—å'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'caramel_peanuts':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ö–∞—Ä–∞–º–µ–ª—å-–∞—Ä–∞—Ö–∏—Å'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'caramel_walnut':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ö–∞—Ä–∞–º–µ–ª—å-–≥—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'caramel_banana':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ö–∞—Ä–∞–º–µ–ª—å-–±–∞–Ω–∞–Ω'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)

    elif query.data == 'ganache_filling_white':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ì–∞–Ω–∞—à –Ω–∞ –±–µ–ª–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'ganache_filling_milk':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ì–∞–Ω–∞—à –Ω–∞ –º–æ–ª–æ—á–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'ganache_filling_black':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ì–∞–Ω–∞—à –Ω–∞ —Ç—ë–º–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)

    elif query.data == 'raspberry_jam':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ú–∞–ª–∏–Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'strawberry_jam':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–ö–ª—É–±–Ω–∏—á–Ω—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'cherry_jam':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–í–∏—à–Ω–µ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'currant_Jam':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–°–º–æ—Ä–æ–¥–∏–Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'mix_jam':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–Ø–≥–æ–¥–Ω—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä(–º–∏–∫—Å)'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)    
    
    elif query.data == 'milk_chocolate_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å –Ω–∞ –º–æ–ª–æ—á–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'white_chocolate_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å –Ω–∞ –±–µ–ª–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'black_chocolate_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å –Ω–∞ —Ç—ë–º–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    
    elif query.data == 'berry_mousse':
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–í—ã–±–µ—Ä–∏—Ç–µ —è–≥–æ–¥–Ω—ã–π –º—É—Å—Å:",reply_markup=berry_mousse_markup)
   
    elif query.data == 'raspberry_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å: –ú–∞–ª–∏–Ω–∞'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'strawberry_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å: –ö–ª—É–±–Ω–∏–∫–∞'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'cerry_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å: –í–∏—à–Ω—è'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'currant_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å: C–º–æ—Ä–æ–¥–∏–Ω–∞'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    elif query.data == 'mix_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å: C–º–µ—Å—å —è–≥–æ–¥ (–º–∏–∫—Å)'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)

    elif query.data == 'caramel_mousse':
        context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞'] = '–º—É—Å—Å: –ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:",reply_markup=final_coating_markup)
    
    elif query.data == 'final_coating_white_ganache':
        context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ'] = '–ì–∞–Ω–∞—à –Ω–∞ –±–µ–ª–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: {context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ']}\n–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å —Ç–æ—Ä—Ç–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö:")
        context.user_data['waiting_quantity_build_cake'] = True
    elif query.data == 'final_coating_milk_ganache':
        context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ'] = '–ì–∞–Ω–∞—à –Ω–∞ –º–æ–ª–æ—á–Ω–æ–º —à–æ–∫–æ–ª–∞–¥–µ'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: {context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ']}\n–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å —Ç–æ—Ä—Ç–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö:")
        context.user_data['waiting_quantity_build_cake'] = True  
    elif query.data == 'final_cream_cheese':
        context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ'] = '–ö—Ä–µ–º-—á–∏–∑'
        await query.edit_message_text(f"–û—Å–Ω–æ–≤–∞: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n–ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n–ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: {context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ']}\n–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å —Ç–æ—Ä—Ç–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö:")
        context.user_data['waiting_quantity_build_cake'] = True

    elif query.data == 'chocolate_cake':
        context.user_data['cake_name']['—Ç–æ—Ä—Ç'] = '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π'
        await query.edit_message_text(text='–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç üç´üç∞\n–î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π —à–æ–∫–æ–ª–∞–¥–∞. –ù–µ–∂–Ω—ã–µ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —à–æ–∫–æ–ª–∞–¥–æ–º –∫–æ—Ä–∂–∏, –ø—Ä–æ—Å–ª–æ–µ–Ω–Ω—ã–µ –∫—Ä–µ–º–æ–º —Å –º–æ–ª–æ—á–Ω—ã–º —à–æ–∫–æ–ª–∞–¥–æ–º.\n‚Äî—à–æ–∫–æ–ª–∞–¥–Ω—ã–µ –∫–æ—Ä–∂–∏;\n–®–æ–∫–æ–ª–∞–¥–Ω—ã–π –∫—Ä–µ–º.',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-1],build_cake_keyboard[-3]]))            
    elif query.data == 'red_cake':
        context.user_data['cake_name']['—Ç–æ—Ä—Ç'] = '–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç'
        await query.edit_message_text(text='–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç üçíüç∞\n–°–∞–º—ã–π –Ω–µ–æ–±—ã—á–Ω—ã–π —Ç–æ—Ä—Ç, –ø–æ—Ä–∞–∂–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∫—É—Å–æ–º, –Ω–æ –∏ –≤–∏–¥–æ–º. –ù–∞—Å—ã—â–µ–Ω–Ω—ã–µ –∫—Ä–∞—Å–Ω—ã–µ —à–æ–∫–æ–ª–∞–¥–Ω—ã–µ –∫–æ—Ä–∂–∏, —Å –Ω–µ–∂–Ω—ã–º —Å–ª–∏–≤–æ—á–Ω—ã–º –∫—Ä–µ–º–æ–º –∏ –ø—Ä–æ—Å–ª–æ–π–∫–æ–π –∏–∑ –≤–∏—à–Ω–∏.\n‚Äî —Å–ª–∏–≤–æ—á–Ω–æ-—à–æ–∫–æ–ª–∞–¥–Ω—ã–µ –∫–æ—Ä–∂–∏;\n–°–ª–∏–≤–æ—á–Ω–æ-—Ç–≤–æ—Ä–æ–∂–Ω—ã–π –∫—Ä–µ–º;\n–í–∏—à–Ω–µ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä.',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-1],build_cake_keyboard[-3]]))
    elif query.data == 'apricot_cake':
        context.user_data['cake_name']['—Ç–æ—Ä—Ç'] = '–ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π'
        await query.edit_message_text(text='–ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π üçëüç∞\n–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ—Ä—Ç, –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π —á–µ–≥–æ-—Ç–æ –Ω–æ–≤–æ–≥–æ –∏ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ.  –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–¥–Ω–æ–≥–æ –∫—É—Å–æ—á–∫–∞, —á—Ç–æ–±—ã –≤–ª—é–±–∏—Ç—å—Å—è üò±üòª\n‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –≤–∞–Ω–∏–ª—å–Ω—ã–µ –∫–æ—Ä–∂–∏;\n–°–ª–∏–≤–æ—á–Ω–æ-—Ç–≤–æ—Ä–æ–∂–Ω—ã–π –∫—Ä–µ–º;\n–ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π –º—É—Å—Å;\n–ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π –∫–æ–Ω—Ñ–∏—Ç—é—Ä;\n–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å–æ–ª–µ–Ω–∞—è –∫–∞—Ä–∞–º–µ–ª—å.',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-1],build_cake_keyboard[-3]]))
    elif query.data == 'honey_cake':
        context.user_data['cake_name']['—Ç–æ—Ä—Ç'] = '–ú–µ–¥–æ–≤–∏–∫'
        await query.edit_message_text(text='–ú–µ–¥–æ–≤–∏–∫ üç∞üçØ\n–¢–æ—Ç —Å–∞–º—ã–π, –Ω–∞—Å—Ç–æ—è—â–∏–π –º–µ–¥–æ–≤–∏–∫. –ü–µ—Å–æ—á–Ω—ã–µ –∫–æ—Ä–∂–∏ —Å–æ –≤–∫—É—Å–æ–º –∏ –∞—Ä–æ–º–∞—Ç–æ–º –º–µ–¥–∞, –ø—Ä–æ–ø–∏—Ç–∞–Ω–Ω—ã–µ —Å–ª–∏–≤–æ—á–Ω—ã–º –∫—Ä–µ–º–æ–º. –ü–æ—Ç—Ä—è—Å–∞—é—â–∞—è –∫–ª–∞—Å—Å–∏–∫–∞ –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö —Ü–µ–Ω–∏—Ç–µ–ª–µ–π üçØ\n‚Äî –º–µ–¥–æ–≤—ã–µ –ø–µ—Å–æ—á–Ω—ã–µ –∫–æ—Ä–∂–∏;,\n–°–º–µ—Ç–∞–Ω–Ω–æ-—Å–ª–∏–≤–æ—á–Ω—ã–π –∫—Ä–µ–º;\n–°–ª–∏–≤–æ—á–Ω–æ-—Ç–≤–æ—Ä–æ–∂–Ω—ã–π –∫—Ä–µ–º.',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-1],build_cake_keyboard[-3]]))
    elif query.data == 'vanilla_cake':
        context.user_data['cake_name']['—Ç–æ—Ä—Ç'] = '–í–∞–Ω–∏–ª—å–Ω—ã–π'
        await query.edit_message_text(text='–í–∞–Ω–∏–ª—å–Ω—ã–π —Ç–æ—Ä—Ç üéÇ \n–¢–æ—Ä—Ç –Ω–∞ —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –Ω—É–∂–µ–Ω —Ç–æ—Ä—Ç, –∏ —á—Ç–æ–±—ã –≤–∫—É—Å –Ω–µ –ø–æ–¥–≤–µ–ª.  –°–æ—á–µ—Ç–∞–Ω–∏–µ –≤–∞–Ω–∏–ª—å–Ω–æ–≥–æ –±–∏—Å–∫–≤–∏—Ç–∞ –∏ —Å–ª–∏–≤–æ—á–Ω–æ–≥–æ –∫—Ä–µ–º–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–≥—Ä—É–∂–∞–µ—Ç –≤–∞—Å –≤ –¥–µ—Ç—Å—Ç–≤–æ. \n‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –≤–∞–Ω–∏–ª—å–Ω—ã–µ –∫–æ—Ä–∂–∏;\n–°–ª–∏–≤–æ—á–Ω—ã–π –∫—Ä–µ–º —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ç–≤–æ—Ä–æ–∂–Ω–æ–≥–æ —Å—ã—Ä–∞;\n–§—Ä—É–∫—Ç–æ–≤–∞—è –ø—Ä–æ—Å–ª–æ–π–∫–∞/–¥–∂–µ–º –ø–æ –∂–µ–ª–∞–Ω–∏—é.',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-1],build_cake_keyboard[-3]]))
    elif query.data == 'poppy_sand_cake':
        context.user_data['cake_name']['—Ç–æ—Ä—Ç'] = '–ú–∞–∫–æ–≤—ã–π'
        await query.edit_message_text(text='–ú–∞–∫–æ–≤—ã–π —Ç–æ—Ä—Ç‚ö´Ô∏èüçãüç∞\n–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ—Ä—Ç, –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π —á–µ–≥–æ-—Ç–æ –Ω–æ–≤–æ–≥–æ –∏ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ.  –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–¥–Ω–æ–≥–æ –∫—É—Å–æ—á–∫–∞, —á—Ç–æ–±—ã –≤–ª—é–±–∏—Ç—å—Å—è üò±üòª\n‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –≤–∞–Ω–∏–ª—å–Ω—ã–µ –∫–æ—Ä–∂–∏ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –º–∞–∫–∞ –∏ –ª–∏–º–æ–Ω–Ω–æ–π —Ü–µ–¥—Ä—ã;\n–°–ª–∏–≤–æ—á–Ω–æ-—Ç–≤–æ—Ä–æ–∂–Ω—ã–π –∫—Ä–µ–º —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ª–∏–º–æ–Ω–Ω–æ–π —Ü–µ–¥—Ä—ã;\n–õ–∏–º–æ–Ω–Ω—ã–π –¥–∂–µ–º;\n–•—Ä—É—Å—Ç—è—â–∏–π –º–∞–∫–æ–≤—ã–π —Å–ª–æ–π.',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-1],build_cake_keyboard[-3]]))
    elif query.data == 'weight_cake':
        await query.edit_message_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∏–ª–æ–≥—Ä–∞–º–º–æ–≤ —Ç–æ—Ä—Ç–∞:')
        context.user_data['waiting_for_quantity'] = True

    elif query.data == 'back_to_main':
        await query.edit_message_text(text='–•–æ—á–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ—Ä—Ç –∏–ª–∏ —Å–æ–±—Ä–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ?', reply_markup=first_level_reply_markup)

    elif query.data == 'yeap':
        weight_cake = context.user_data["cake_name"]["–≤–µ—Å"]
        order = f'–¢–æ—Ä—Ç: {context.user_data.get("cake_name")}\n–í–µ—Å: {weight_cake} –∫–≥.\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.name}\n–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {user.phone_num}'
        await Order.create(user=user,order=order)
        await query.edit_message_text(text=f'{user.name}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!ü§ó\n–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—Ä—Ç {context.user_data["cake_name"]["—Ç–æ—Ä—Ç"]}, –≤–µ—Å–æ–º {weight_cake} –∫–≥.üç∞\n–ú—ã –í–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤ —Ç–µ—á–µ–Ω–∏–∏ –ø–æ–ª—É—á–∞—Å–∞üïñüì≤',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-2]]))
        await send_message_creator(context,message=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name} —Å –Ω–æ–º–µ—Ä–æ–º: {user.phone_num} –∑–∞–∫–∞–∑–∞–ª —Ç–æ—Ä—Ç: {context.user_data["cake_name"]["—Ç–æ—Ä—Ç"]}, –≤–µ—Å–æ–º {weight_cake} –∫–≥')
    
    elif query.data == 'YES':        
        order_summary = (
                f"\n‚Ä¢ –ö–æ—Ä–∂: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n"
                f"‚Ä¢ –ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n"
                f"‚Ä¢ –ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n"
                f"‚Ä¢ –ü–æ–∫—Ä—ã—Ç–∏–µ: {context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ']}\n"
                f"‚Ä¢ –í–µ—Å: {context.user_data['cake_build']['–≤–µ—Å']} –∫–≥\n"
            )
        await Order.create(user=user,order=order_summary)
        await send_message_creator(context,f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name} —Å –Ω–æ–º–µ—Ä–æ–º: {user.phone_num} –∑–∞–∫–∞–∑–∞–ª —Ç–æ—Ä—Ç: {order_summary}')
        await query.edit_message_text(text=f'{user.name}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!ü§ó\n–ú—ã –í–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤ —Ç–µ—á–µ–Ω–∏–∏ –ø–æ–ª—É—á–∞—Å–∞üïñüì≤',reply_markup=InlineKeyboardMarkup([build_cake_keyboard[-2]]))



async def send_message_creator(context:ContextTypes.DEFAULT_TYPE, message:str):
    await context.bot.send_message(chat_id=cake_creator_id, text=message)



async def echo(update: Update, context:ContextTypes.DEFAULT_TYPE) -> None:
    chat_id = update.effective_chat.id
    
    if context.user_data.get('waiting_for_name'):
        context.user_data['name'] = update.message.text
        await update.message.reply_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')
        context.user_data['waiting_for_name'] = False
        context.user_data['waiting_for_number'] = True

    elif context.user_data.get('waiting_for_number'):
        context.user_data['number_contact'] = update.message.text
        chat_id = update.effective_chat.id
        name = context.user_data['name']
        phone_num = context.user_data['number_contact']
        await User.create(chat_id=chat_id,name=name,phone_num=phone_num)
        await update.message.reply_text('–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ—Ä—Ç –∏–ª–∏ —Å–æ–±—Ä–∞—Ç—å –µ–≥–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.', reply_markup=first_level_reply_markup)
        context.user_data['waiting_for_number'] = False

    elif context.user_data.get('waiting_for_quantity'):
            user = await User.get(chat_id=chat_id)
            context.user_data['cake_name']['–≤–µ—Å'] = float(update.message.text)
            await update.message.reply_text(f'{user.name}, –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—Ä—Ç {context.user_data["cake_name"]["—Ç–æ—Ä—Ç"]}, –≤–µ—Å–æ–º {context.user_data["cake_name"]["–≤–µ—Å"]} –∫–≥.',reply_markup=cake_final_markup)
            context.user_data['waiting_for_quantity'] = False

    elif context.user_data.get('waiting_quantity_build_cake'):
        user = await User.get(chat_id=chat_id)
        context.user_data['cake_build']['–≤–µ—Å'] = float(update.message.text)
        order_summary = (
                f"–í–∞—à –∑–∞–∫–∞–∑, {user.name}!\n\n"
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—Ä—Ç:\n"
                f"‚Ä¢ –ö–æ—Ä–∂: {context.user_data['cake_build']['–∫–æ—Ä–∂']}\n"
                f"‚Ä¢ –ö—Ä–µ–º: {context.user_data['cake_build']['–∫—Ä–µ–º']}\n"
                f"‚Ä¢ –ù–∞—á–∏–Ω–∫–∞: {context.user_data['cake_build']['–Ω–∞—á–∏–Ω–∫–∞']}\n"
                f"‚Ä¢ –ü–æ–∫—Ä—ã—Ç–∏–µ: {context.user_data['cake_build']['–ø–æ–∫—Ä—ã—Ç–∏–µ']}\n"
                f"‚Ä¢ –í–µ—Å: {context.user_data['cake_build']['–≤–µ—Å']} –∫–≥.\n"
            )
        await update.message.reply_text(order_summary,reply_markup=cake_build_final_markup)
        context.user_data['waiting_quantity_build_cake'] = False

    else:
        await update.message.reply_text("—é–∑–∞–π –∫–æ–º–∞–Ω–¥—ã")


async def init():
    await Tortoise.init(
        db_url="sqlite://database.db",
        modules={"models": ["models"]}
    )
    await Tortoise.generate_schemas()


def main():
    loop = asyncio.get_event_loop()
    loop.run_until_complete(init())

    application = ApplicationBuilder().token(TOKEN).build()
    start_handler = CommandHandler('start', start)
    echo_handler = MessageHandler(None, echo)
    button_handler = CallbackQueryHandler(button)

    application.add_handler(start_handler)
    application.add_handler(echo_handler)
    application.add_handler(button_handler)

    application.run_polling()

if __name__ == '__main__':
    main()